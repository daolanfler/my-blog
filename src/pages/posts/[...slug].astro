---
/** ------------- SSG start -------------- */

import { CollectionEntry, getCollection } from "astro:content";
import PostLayout from "../../layouts/PostLayout.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// 2. When it's time to render, you can get the entry directly from the prop
const { entry } = Astro.props as { entry: CollectionEntry<"blog"> };
const { Content } = await entry.render();

/** ------------- SSG end -------------- */

/** ------------- Server rendering start -------------- */

// import { getEntry } from "astro:content";

// // 1. Get the slug from the incoming server request
// const { slug } = Astro.params;
// if (slug === undefined) {
//   throw new Error("Slug is required");
// }
// // 2. Query for the entry directly using the request slug
// const entry = await getEntry("blog", slug);
// // 3. Redirect if the entry does not exist
// if (entry === undefined) {
//   return Astro.redirect("/404");
// }
// // 4. (Optional) Render the entry to HTML in the template
// const { Content } = await entry.render();

/** ------------- Server rendering end -------------- */
---

<PostLayout title={entry.data.title} pageTitle={entry.data.pageTitle}>
  <h1>{entry.data.title}</h1>
  <div class="text-right italic mb-4">
    发布于 <time>{entry.data.date.toLocaleString()}</time>
    <a
      class="ml-2"
      href={`/posts/${entry.slug}#disqus_thread`}></a>
  </div>
  <Content />
</PostLayout>
